In this chapter, we'll cover the following recipes:

   > Creating a TypeScript project
   > Understanding TypeScript
   > Creating your first TypeScript class
   > Creating your first project with Vue CLI
   > Adding plugins to a Vue CLI project with Vue UI
   > Adding TypeScript to a Vue CLI project
   > Creating your first TypeScript Vue component with vue-class-component
   > Creating a custom mixin with vue-class-component
   > Creating a custom function decorator with vue-class-component
   > Adding custom hooks to vue-class-component
   > Adding vue-property-decorator to vue-class-component

-----------
What is the advantage of using TypeScript? The main advantage is the typed syntax, 
which helps with static checking and code refactoring. 
You can still use all the JavaScript libraries and program with the 
latest ECMAScript features out of the box.
-----------
___________________________________________________________________________________________

> Creating a TypeScript project

COMMANDS:
> npm install -g typescript

1.- npm init -y                         { start our project }

2.- npm install typescript --only=dev   { install TypeScript }

3.- tsc --init                          { start our TypeScript project } 
        [
            This will create a tsconfig.json file inside our folder. 
            This is a compiler settings file. Here, you can define the target, 
            which JavaScript libraries will be available on the development, 
            the target ECMAScript version, 
            the module generation, and much more.
        ]


        *********************TIP*********************
        {
            When developing for the web,
            don't forget to add the Document Object Model (DOM) 
            to the libraries on the compilerOption property
             inside the tsconfig.json file so that you can have 
             access to the window and document object when developing.
        }
        *********************TIP*********************
        
4.-  Create a file index.ts {That will log a math calculation in terminal}
5.- add some code.
6.- tsc ./index.ts {compile this code to a JavaScript file}
        [
            You may be wondering: where are my types?
            As ECMAScript is a dynamic language, 
            the types of TypeScript exist only at the superset level,
            and won't be passed down to the JavaScript file.
            Your final JavaScript will be in the form of a transpiled file,
            with the configurations defined in the tsconfig.json fil
        ]


________________
| HOW IT WORKS:|
|______________|____________________________________________________________________________________________________________|
|  When we create our TypeScript project, a file named tsconfig.json is created inside our folder.                          |
|  This file coordinates all the rules on the compiler and the static type checking during the development process.         |
|  All developments are based on the rules defined in this file. Each environment depends on specific                       |
|  rules and libraries that need to be imported.                                                                            |
|  When developing, we can assign types directly to constants, variables,                                                   |
|  function parameters, returns, and much more. These types of definitions                                                  |
|  can prevent basic type errors and code refactoring.                                                                      |
|  After the development is done and we compile the project,                                                                |
|  the final product will be a pure JavaScript file.                                                                        |
|  This file won't have any type of checking, due to the dynamic type of JavaScript.                                        |
|                                                                                                                           |
|  This JavaScript file gets transpiled to the target model                                                                 |
|  and defined on the configuration file, so we can execute it without any problems.                                        |
____________________________________________________________________________________________________________________________|



________________
| SEE ALSO     |
|______________|____________________________________________________________________________________________________________

You can find more information about TypeScript at https://www.typescriptlang.org/docs/home.html.

There is a guide to migrating from JavaScript at https://www.typescriptlang.org/docs/handbook/migrating-from-javascript.html.

A 5-minute lesson for TypeScript can be found at https://www.typescriptlang.org/docs/handbook/typescript-in-5-minutes.html.

____________________________________________________________________________________________________________________________




___________________________________________________________________________________________
